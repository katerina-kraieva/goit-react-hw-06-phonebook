{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactList/fade.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","contactsTypes","ADD","DELETE","CHANGE_FILTER","contactsActions","addContact","createAction","nam","tel","payload","id","shortid","generate","name","number","deleteContact","changeFilter","contacts","createReducer","actions","state","action","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","title","children","className","s","container","defaultProps","ContactForm","handleChangeName","e","setState","currentTarget","value","handleChangeNumber","handleSubmit","preventDefault","trim","console","log","toast","error","props","find","contact","onSubmit","this","nameId","telId","form","htmlFor","input","type","onChange","button","Component","connect","dispatch","target","findId","label","getVisibleContacts","normalizedFilter","toLowerCase","includes","items","onDeleteNumber","TransitionGroup","component","list","map","item","CSSTransition","timeout","classNames","PhoneList","onClick","App","in","appear","unmountOnExit","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.55a68eee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2feRP\",\"input\":\"ContactForm_input__3LQTG\",\"button\":\"ContactForm_button__20MaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1iIab\",\"item\":\"ContactList_item__1QOYl\",\"button\":\"ContactList_button__xQzma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3vMPZ\",\"title\":\"Container_title__rBFKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3ITwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1P-Qm\",\"enterActive\":\"fade_enterActive__1kmuW\",\"exit\":\"fade_exit__22-Cq\",\"exitActive\":\"fade_exitActive__3iDQN\"};","const contactsTypes = {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  CHANGE_FILTER: 'contacts/filter',\r\n};\r\n\r\nexport default contactsTypes;","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport contactsTypes from './contacts-types';\r\n\r\nconst addContact = createAction(contactsTypes.ADD, (nam, tel) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name: nam,\r\n      number: tel,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(contactsTypes.DELETE);\r\n\r\nconst changeFilter = createAction(contactsTypes.CHANGE_FILTER);\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-action';\r\n\r\nconst contactsReserv = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(contactsReserv, {\r\n  [actions.addContact]: (state, action) => [action.payload, ...state],\r\n  [actions.deleteContact]: (state, action) => state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(persistConfig, contactsReducer),\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import PropTypes from 'prop-types';\r\n\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.defaultProps = {\r\n  title: ' ',\r\n};\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChangeName = e => {\r\n    this.setState({\r\n      name: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleChangeNumber = e => {\r\n    this.setState({\r\n      number: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    \r\n    if (name.trim() === '' || number.trim() === '') {\r\n      console.log('empty name and number');\r\n      toast.error(`The name and number fields are empty!`);\r\n      return;\r\n    }\r\n   else if (this.props.contacts.find(contact => contact.name === name)) {\r\n      console.log(name);\r\n      toast.error(`${name} is already in your contact list`);\r\n      return;\r\n    }\r\n     this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const nameId = shortid.generate();\r\n    const telId = shortid.generate();\r\n\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={nameId}> Name </label>\r\n        <input\r\n          className={s.input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={this.handleChangeName}\r\n        />\r\n        <label htmlFor={telId}> Number </label>\r\n        <input\r\n          className={s.input}\r\n          id={telId}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={this.handleChangeNumber}\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n        </form>\r\n        </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (nam, tel) => dispatch(contactsActions.addContact(nam, tel)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import shortid from 'shortid';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const findId = shortid.generate();\r\n  return (\r\n    <div>\r\n      <label htmlFor={findId} className={s.label}>Find contacts by name</label>\r\n      <input className={s.input} id={findId} type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport s from './ContactList.module.css';\r\nimport PhoneList from './fade.module.css';\r\n\r\nfunction ContactList({ items, onDeleteNumber }) {\r\n  return (\r\n    <TransitionGroup component=\"ol\" className={s.list}>\r\n      {items.map(item => (\r\n        <CSSTransition key={item.id} timeout={250} classNames={PhoneList}>\r\n          <li key={item.id} className={s.item}>\r\n            <span>\r\n              <b>{item.name}:</b> {item.number}\r\n            </span>\r\n            <button className={s.button} type=\"button\" onClick={() => onDeleteNumber(item.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  items: getVisibleContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteNumber: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Container from './Components/Container/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\n\nclass App extends Component {\n   render() {\n    return (\n      <>\n        <Container>\n          <CSSTransition in={true} appear={true} timeout={250} classNames=\"Logo\" unmountOnExit>\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm />\n        </Container>\n        <Container title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Container>\n        <ToastContainer position=\"top-right\" />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}